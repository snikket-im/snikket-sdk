/* tslint:disable */ // Generated by Haxe TypeScript Declaration Generator :)
export var borogove;
(function (borogove) {
    let UiState;
    (function (UiState) {
        UiState[UiState["Pinned"] = 0] = "Pinned";
        UiState[UiState["Open"] = 1] = "Open";
        UiState[UiState["Closed"] = 2] = "Closed";
    })(UiState = borogove.UiState || (borogove.UiState = {}));
})(borogove || (borogove = {}));
(function (borogove) {
    var calls;
    (function (calls) {
        let CallStatus;
        (function (CallStatus) {
            CallStatus[CallStatus["NoCall"] = 0] = "NoCall";
            CallStatus[CallStatus["Incoming"] = 1] = "Incoming";
            CallStatus[CallStatus["Outgoing"] = 2] = "Outgoing";
            CallStatus[CallStatus["Connecting"] = 3] = "Connecting";
            CallStatus[CallStatus["Ongoing"] = 4] = "Ongoing";
            CallStatus[CallStatus["Failed"] = 5] = "Failed";
        })(CallStatus = calls.CallStatus || (calls.CallStatus = {}));
    })(calls = borogove.calls || (borogove.calls = {}));
})(borogove || (borogove = {}));
(function (borogove) {
    let MessageDirection;
    (function (MessageDirection) {
        MessageDirection[MessageDirection["MessageReceived"] = 0] = "MessageReceived";
        MessageDirection[MessageDirection["MessageSent"] = 1] = "MessageSent";
    })(MessageDirection = borogove.MessageDirection || (borogove.MessageDirection = {}));
})(borogove || (borogove = {}));
(function (borogove) {
    let EncryptionStatus;
    (function (EncryptionStatus) {
        EncryptionStatus[EncryptionStatus["DecryptionSuccess"] = 0] = "DecryptionSuccess";
        EncryptionStatus[EncryptionStatus["DecryptionFailure"] = 1] = "DecryptionFailure";
    })(EncryptionStatus = borogove.EncryptionStatus || (borogove.EncryptionStatus = {}));
})(borogove || (borogove = {}));
(function (borogove) {
    let MessageStatus;
    (function (MessageStatus) {
        MessageStatus[MessageStatus["MessagePending"] = 0] = "MessagePending";
        MessageStatus[MessageStatus["MessageDeliveredToServer"] = 1] = "MessageDeliveredToServer";
        MessageStatus[MessageStatus["MessageDeliveredToDevice"] = 2] = "MessageDeliveredToDevice";
        MessageStatus[MessageStatus["MessageFailedToSend"] = 3] = "MessageFailedToSend";
    })(MessageStatus = borogove.MessageStatus || (borogove.MessageStatus = {}));
})(borogove || (borogove = {}));
(function (borogove) {
    let MessageType;
    (function (MessageType) {
        MessageType[MessageType["MessageChat"] = 0] = "MessageChat";
        MessageType[MessageType["MessageCall"] = 1] = "MessageCall";
        MessageType[MessageType["MessageChannel"] = 2] = "MessageChannel";
        MessageType[MessageType["MessageChannelPrivate"] = 3] = "MessageChannelPrivate";
    })(MessageType = borogove.MessageType || (borogove.MessageType = {}));
})(borogove || (borogove = {}));
(function (borogove) {
    let UserState;
    (function (UserState) {
        UserState[UserState["Gone"] = 0] = "Gone";
        UserState[UserState["Inactive"] = 1] = "Inactive";
        UserState[UserState["Active"] = 2] = "Active";
        UserState[UserState["Composing"] = 3] = "Composing";
        UserState[UserState["Paused"] = 4] = "Paused";
    })(UserState = borogove.UserState || (borogove.UserState = {}));
})(borogove || (borogove = {}));
(function (borogove) {
    let ChatMessageEvent;
    (function (ChatMessageEvent) {
        ChatMessageEvent[ChatMessageEvent["DeliveryEvent"] = 0] = "DeliveryEvent";
        ChatMessageEvent[ChatMessageEvent["CorrectionEvent"] = 1] = "CorrectionEvent";
        ChatMessageEvent[ChatMessageEvent["ReactionEvent"] = 2] = "ReactionEvent";
        ChatMessageEvent[ChatMessageEvent["StatusEvent"] = 3] = "StatusEvent";
    })(ChatMessageEvent = borogove.ChatMessageEvent || (borogove.ChatMessageEvent = {}));
})(borogove || (borogove = {}));
(function (borogove) {
    let ReactionUpdateKind;
    (function (ReactionUpdateKind) {
        ReactionUpdateKind[ReactionUpdateKind["EmojiReactions"] = 0] = "EmojiReactions";
        ReactionUpdateKind[ReactionUpdateKind["AppendReactions"] = 1] = "AppendReactions";
        ReactionUpdateKind[ReactionUpdateKind["CompleteReactions"] = 2] = "CompleteReactions";
    })(ReactionUpdateKind = borogove.ReactionUpdateKind || (borogove.ReactionUpdateKind = {}));
})(borogove || (borogove = {}));
